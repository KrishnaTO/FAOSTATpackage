CHMT = function(var, data, year = "Year"){
    for(i in 1:length(var)){
        if(length(na.omit(data[data$FAOST_CODE %in% c(41, 351, 357), var,
                               drop = TRUE])) > 1)
            cat("\nMultiple China detected, sanitization is performed")
        for(j in sort(unique(data[, year]))){
            ## If the China, mainland exist then we will not use
            ## (China + Taiwan) nor the (China + Hong Kong + Macau
            ## + Taiwan).
            if(NROW(data[data$FAOST_CODE == 41 &
                         data[, year] == j, var[i]]) == 1){
                if(!is.na(data[data$FAOST_CODE == 41 &
                               data[, year] == j, var[i]])){
                    data[data$FAOST_CODE %in% c(351, 357), var[i]] = NA
                    ## If China mainland does not exist then we
                    ## will use (China + Taiwan).
                } else if(NROW(data[data$FAOST_CODE == 357 &
                                    data[, year] == j, var[i]]) == 1){
                    if(!is.na(data[data$FAOST_CODE == 357 &
                                   data[, year] == j, var[i]])){
                        data[data$FAOST_CODE %in% c(41, 214, 351),
                             var[i]] = NA
                        ## If both fails then we will use (China +
                        ## Hong Kong + Macau + Taiwan)
                    } else if(NROW(data[data$FAOST_CODE == 351 &
                                        data[, year] == j, var[i]]) == 1){
                        if(!is.na(data[data$FAOST_CODE == 351 &
                                       data[, year] == j, var[i]])){
                            data[data$FAOST_CODE %in%
                                 c(41, 96, 128, 214, 357), var[i]] = NA
                        }
                    }
                }
            }
        }
    }
    data
}
osdiag(var = colnames(FAO.lst$entity)[-c(1:2)], data = FAO.lst$entity, type = c("overlap", "multiChina"))
osdiag = function(var, year = "Year", country = "FAOST_CODE", data,
    type = "overlap"){
    ## if(country != "FAOST_CODE")
    ##     new_data = translateCountryCode(data, from = country,
    ##         to = "FAOST_CODE")
    if("overlap" %in% type){
        printLab("Check for overlap between transitional country")
        ## Check for overlap in Belgium, LuxemBourg and Belgium-Luxembourg
        data = overlap(old = 15, new = c(255, 256), var = var, data = data)
        data = overlap(old = 51, new = c(167, 199), var = var, data = data)
        take = overlap(old = 62, new = c(178, 238), var = var, data = data)
        ## Need more information on Netherlands Antilles and Trust
        ## Territory of Pacific Islands
        data = overlap(old = 186, new = c(272, 273), var = var, data = data)
        data = overlap(old = 228, new = c(57, 63, 73, 119, 126, 146, 185, 208,
                       213, 230, 235, 271), var = var, data = data)
        data = overlap(old = c(246, 247), new = 249, var = var, data = data)
        data = overlap(old = 248, new = c(80, 98, 154, 186, 198),
                var = var, data = data)
        cat("\nNOTE: It is common for data reported by the predecessor\n or the new transitional country to include the new country\n")
    }
    if("multiChina" %in% type)
        data = CHMT(var = var, data = data, year = year)
}
CHMT = function(var, data, year = "Year"){
    for(i in 1:length(var)){
        if(length(na.omit(data[data$FAOST_CODE %in% c(41, 351, 357), var,
                               drop = TRUE])) > 1)
            cat(paste0("\nNOTE: Multiple China detected in ", var[i],
                       "sanitization is performed\n"))
        for(j in sort(unique(data[, year]))){
            ## If the China, mainland exist then we will not use
            ## (China + Taiwan) nor the (China + Hong Kong + Macau
            ## + Taiwan).
            if(NROW(data[data$FAOST_CODE == 41 &
                         data[, year] == j, var[i]]) == 1){
                if(!is.na(data[data$FAOST_CODE == 41 &
                               data[, year] == j, var[i]])){
                    data[data$FAOST_CODE %in% c(351, 357), var[i]] = NA
                    ## If China mainland does not exist then we
                    ## will use (China + Taiwan).
                } else if(NROW(data[data$FAOST_CODE == 357 &
                                    data[, year] == j, var[i]]) == 1){
                    if(!is.na(data[data$FAOST_CODE == 357 &
                                   data[, year] == j, var[i]])){
                        data[data$FAOST_CODE %in% c(41, 214, 351),
                             var[i]] = NA
                        ## If both fails then we will use (China +
                        ## Hong Kong + Macau + Taiwan)
                    } else if(NROW(data[data$FAOST_CODE == 351 &
                                        data[, year] == j, var[i]]) == 1){
                        if(!is.na(data[data$FAOST_CODE == 351 &
                                       data[, year] == j, var[i]])){
                            data[data$FAOST_CODE %in%
                                 c(41, 96, 128, 214, 357), var[i]] = NA
                        }
                    }
                }
            }
        }
    }
    data
}
osdiag(var = colnames(FAO.lst$entity)[-c(1:2)], data = FAO.lst$entity, type = c("overlap", "multiChina"))
CHMT = function(var, data, year = "Year"){
    for(i in 1:length(var)){
        if(length(na.omit(data[data$FAOST_CODE %in% c(41, 351, 357), var,
                               drop = TRUE])) > 1)
            cat(paste0("\nNOTE: Multiple China detected in '", var[i],
                       "' sanitization is performed\n"))
        for(j in sort(unique(data[, year]))){
            ## If the China, mainland exist then we will not use
            ## (China + Taiwan) nor the (China + Hong Kong + Macau
            ## + Taiwan).
            if(NROW(data[data$FAOST_CODE == 41 &
                         data[, year] == j, var[i]]) == 1){
                if(!is.na(data[data$FAOST_CODE == 41 &
                               data[, year] == j, var[i]])){
                    data[data$FAOST_CODE %in% c(351, 357), var[i]] = NA
                    ## If China mainland does not exist then we
                    ## will use (China + Taiwan).
                } else if(NROW(data[data$FAOST_CODE == 357 &
                                    data[, year] == j, var[i]]) == 1){
                    if(!is.na(data[data$FAOST_CODE == 357 &
                                   data[, year] == j, var[i]])){
                        data[data$FAOST_CODE %in% c(41, 214, 351),
                             var[i]] = NA
                        ## If both fails then we will use (China +
                        ## Hong Kong + Macau + Taiwan)
                    } else if(NROW(data[data$FAOST_CODE == 351 &
                                        data[, year] == j, var[i]]) == 1){
                        if(!is.na(data[data$FAOST_CODE == 351 &
                                       data[, year] == j, var[i]])){
                            data[data$FAOST_CODE %in%
                                 c(41, 96, 128, 214, 357), var[i]] = NA
                        }
                    }
                }
            }
        }
    }
    data
}
osdiag(var = colnames(FAO.lst$entity)[-c(1:2)], data = FAO.lst$entity, type = c("overlap", "multiChina"))
osdiag = function(var, year = "Year", country = "FAOST_CODE", data,
    type = "overlap"){
    ## if(country != "FAOST_CODE")
    ##     new_data = translateCountryCode(data, from = country,
    ##         to = "FAOST_CODE")
    if("overlap" %in% type){
        printLab("Check for overlap between transitional country")
        ## Check for overlap in Belgium, LuxemBourg and Belgium-Luxembourg
        data = overlap(old = 15, new = c(255, 256), var = var, data = data)
        data = overlap(old = 51, new = c(167, 199), var = var, data = data)
        take = overlap(old = 62, new = c(178, 238), var = var, data = data)
        ## Need more information on Netherlands Antilles and Trust
        ## Territory of Pacific Islands
        data = overlap(old = 186, new = c(272, 273), var = var, data = data)
        data = overlap(old = 228, new = c(57, 63, 73, 119, 126, 146, 185, 208,
                       213, 230, 235, 271), var = var, data = data)
        data = overlap(old = c(246, 247), new = 249, var = var, data = data)
        data = overlap(old = 248, new = c(80, 98, 154, 186, 198),
                var = var, data = data)
        cat("\nNOTE: It is common for data reported by the predecessor\n or the new transitional country to include the new country\n")
    }
    if("multiChina" %in% type)
        data = CHMT(var = var, data = data, year = year)
    data
}
test = osdiag(var = colnames(FAO.lst$entity)[-c(1:2)], data = FAO.lst$entity, type = c("overlap", "multiChina"))
test = osdiag(var = colnames(FAO.lst$entity)[-c(1:2)], data = tset, type = c("overlap", "multiChina"))
test = osdiag(var = colnames(FAO.lst$entity)[-c(1:2)], data = test, type = c("overlap", "multiChina"))
CHMT = function(var, data, year = "Year"){
    for(i in 1:length(var)){
        if(length(na.omit(data[data$FAOST_CODE %in% c(41, 351, 357), var[i],
                               drop = TRUE])) > 1)
            print(data[data$FAOST_CODE %in% c(41, 351, 357), var[i]])
            cat(paste0("\nNOTE: Multiple China detected in '", var[i],
                       "' sanitization is performed\n"))
        for(j in sort(unique(data[, year]))){
            ## If the China, mainland exist then we will not use
            ## (China + Taiwan) nor the (China + Hong Kong + Macau
            ## + Taiwan).
            if(NROW(data[data$FAOST_CODE == 41 &
                         data[, year] == j, var[i]]) == 1){
                if(!is.na(data[data$FAOST_CODE == 41 &
                               data[, year] == j, var[i]])){
                    data[data$FAOST_CODE %in% c(351, 357), var[i]] = NA
                    ## If China mainland does not exist then we
                    ## will use (China + Taiwan).
                } else if(NROW(data[data$FAOST_CODE == 357 &
                                    data[, year] == j, var[i]]) == 1){
                    if(!is.na(data[data$FAOST_CODE == 357 &
                                   data[, year] == j, var[i]])){
                        data[data$FAOST_CODE %in% c(41, 214, 351),
                             var[i]] = NA
                        ## If both fails then we will use (China +
                        ## Hong Kong + Macau + Taiwan)
                    } else if(NROW(data[data$FAOST_CODE == 351 &
                                        data[, year] == j, var[i]]) == 1){
                        if(!is.na(data[data$FAOST_CODE == 351 &
                                       data[, year] == j, var[i]])){
                            data[data$FAOST_CODE %in%
                                 c(41, 96, 128, 214, 357), var[i]] = NA
                        }
                    }
                }
            }
        }
    }
    data
}
osdiag = function(var, year = "Year", country = "FAOST_CODE", data,
    type = "overlap"){
    ## if(country != "FAOST_CODE")
    ##     new_data = translateCountryCode(data, from = country,
    ##         to = "FAOST_CODE")
    if("overlap" %in% type){
        printLab("Check for overlap between transitional country")
        ## Check for overlap in Belgium, LuxemBourg and Belgium-Luxembourg
        data = overlap(old = 15, new = c(255, 256), var = var, data = data)
        data = overlap(old = 51, new = c(167, 199), var = var, data = data)
        take = overlap(old = 62, new = c(178, 238), var = var, data = data)
        ## Need more information on Netherlands Antilles and Trust
        ## Territory of Pacific Islands
        data = overlap(old = 186, new = c(272, 273), var = var, data = data)
        data = overlap(old = 228, new = c(57, 63, 73, 119, 126, 146, 185, 208,
                       213, 230, 235, 271), var = var, data = data)
        data = overlap(old = c(246, 247), new = 249, var = var, data = data)
        data = overlap(old = 248, new = c(80, 98, 154, 186, 198),
                var = var, data = data)
        cat("\nNOTE: It is common for data reported by the predecessor\n or the new transitional country to include the new country\n")
    }
    if("multiChina" %in% type)
        data = CHMT(var = var, data = data, year = year)
    data
}
test = osdiag(var = colnames(FAO.lst$entity)[-c(1:2)], data = FAOlst$entity, type = c("overlap", "multiChina"))
test = osdiag(var = colnames(FAO.lst$entity)[-c(1:2)], data = FAO.lst$entity, type = c("overlap", "multiChina"))
CHMT = function(var, data, year = "Year"){
    for(i in 1:length(var)){
        if(length(na.omit(data[data$FAOST_CODE %in% c(41, 351, 357), var[i],
                               drop = TRUE])) > 1)
            print(data[data$FAOST_CODE %in% c(41, 351, 357), c("FAOST_CODE", var[i])])
            cat(paste0("\nNOTE: Multiple China detected in '", var[i],
                       "' sanitization is performed\n"))
        for(j in sort(unique(data[, year]))){
            ## If the China, mainland exist then we will not use
            ## (China + Taiwan) nor the (China + Hong Kong + Macau
            ## + Taiwan).
            if(NROW(data[data$FAOST_CODE == 41 &
                         data[, year] == j, var[i]]) == 1){
                if(!is.na(data[data$FAOST_CODE == 41 &
                               data[, year] == j, var[i]])){
                    data[data$FAOST_CODE %in% c(351, 357), var[i]] = NA
                    ## If China mainland does not exist then we
                    ## will use (China + Taiwan).
                } else if(NROW(data[data$FAOST_CODE == 357 &
                                    data[, year] == j, var[i]]) == 1){
                    if(!is.na(data[data$FAOST_CODE == 357 &
                                   data[, year] == j, var[i]])){
                        data[data$FAOST_CODE %in% c(41, 214, 351),
                             var[i]] = NA
                        ## If both fails then we will use (China +
                        ## Hong Kong + Macau + Taiwan)
                    } else if(NROW(data[data$FAOST_CODE == 351 &
                                        data[, year] == j, var[i]]) == 1){
                        if(!is.na(data[data$FAOST_CODE == 351 &
                                       data[, year] == j, var[i]])){
                            data[data$FAOST_CODE %in%
                                 c(41, 96, 128, 214, 357), var[i]] = NA
                        }
                    }
                }
            }
        }
    }
    data
}
test = osdiag(var = colnames(FAO.lst$entity)[-c(1:2)], data = FAO.lst$entity, type = c("overlap", "multiChina"))
CHMT = function(var, data, year = "Year"){
    for(i in 1:length(var)){
        if(length(unique(data[data$FAOST_CODE %in% c(41, 351, 357) &
                              !is.na(data[, var[i]]), "FAOST_CODE"])) > 1)
print(unique(data[data$FAOST_CODE %in% c(41, 351, 357) &
                              !is.na(data[, var[i]]), "FAOST_CODE"]))
            cat(paste0("\nNOTE: Multiple China detected in '", var[i],
                       "' sanitization is performed\n"))
        for(j in sort(unique(data[, year]))){
            ## If the China, mainland exist then we will not use
            ## (China + Taiwan) nor the (China + Hong Kong + Macau
            ## + Taiwan).
            if(NROW(data[data$FAOST_CODE == 41 &
                         data[, year] == j, var[i]]) == 1){
                if(!is.na(data[data$FAOST_CODE == 41 &
                               data[, year] == j, var[i]])){
                    data[data$FAOST_CODE %in% c(351, 357), var[i]] = NA
                    ## If China mainland does not exist then we
                    ## will use (China + Taiwan).
                } else if(NROW(data[data$FAOST_CODE == 357 &
                                    data[, year] == j, var[i]]) == 1){
                    if(!is.na(data[data$FAOST_CODE == 357 &
                                   data[, year] == j, var[i]])){
                        data[data$FAOST_CODE %in% c(41, 214, 351),
                             var[i]] = NA
                        ## If both fails then we will use (China +
                        ## Hong Kong + Macau + Taiwan)
                    } else if(NROW(data[data$FAOST_CODE == 351 &
                                        data[, year] == j, var[i]]) == 1){
                        if(!is.na(data[data$FAOST_CODE == 351 &
                                       data[, year] == j, var[i]])){
                            data[data$FAOST_CODE %in%
                                 c(41, 96, 128, 214, 357), var[i]] = NA
                        }
                    }
                }
            }
        }
    }
    data
}
test = osdiag(var = colnames(FAO.lst$entity)[-c(1:2)], data = FAO.lst$entity, type = c("overlap", "multiChina"))
CHMT = function(var, data, year = "Year"){
    for(i in 1:length(var)){
        if(length(unique(data[data$FAOST_CODE %in% c(41, 351, 357) &
                              !is.na(data[, var[i]]), "FAOST_CODE"])) > 1){
print(unique(data[data$FAOST_CODE %in% c(41, 351, 357) &
                              !is.na(data[, var[i]]), "FAOST_CODE"]))
            cat(paste0("\nNOTE: Multiple China detected in '", var[i],
                       "' sanitization is performed\n"))
}
        for(j in sort(unique(data[, year]))){
            ## If the China, mainland exist then we will not use
            ## (China + Taiwan) nor the (China + Hong Kong + Macau
            ## + Taiwan).
            if(NROW(data[data$FAOST_CODE == 41 &
                         data[, year] == j, var[i]]) == 1){
                if(!is.na(data[data$FAOST_CODE == 41 &
                               data[, year] == j, var[i]])){
                    data[data$FAOST_CODE %in% c(351, 357), var[i]] = NA
                    ## If China mainland does not exist then we
                    ## will use (China + Taiwan).
                } else if(NROW(data[data$FAOST_CODE == 357 &
                                    data[, year] == j, var[i]]) == 1){
                    if(!is.na(data[data$FAOST_CODE == 357 &
                                   data[, year] == j, var[i]])){
                        data[data$FAOST_CODE %in% c(41, 214, 351),
                             var[i]] = NA
                        ## If both fails then we will use (China +
                        ## Hong Kong + Macau + Taiwan)
                    } else if(NROW(data[data$FAOST_CODE == 351 &
                                        data[, year] == j, var[i]]) == 1){
                        if(!is.na(data[data$FAOST_CODE == 351 &
                                       data[, year] == j, var[i]])){
                            data[data$FAOST_CODE %in%
                                 c(41, 96, 128, 214, 357), var[i]] = NA
                        }
                    }
                }
            }
        }
    }
    data
}
test = osdiag(var = colnames(FAO.lst$entity)[-c(1:2)], data = FAO.lst$entity, type = c("overlap", "multiChina"))
getFAO
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
install.packages("fda", repos ="http://cran.stat.auckland.ac.nz")
library(help = fda)
install.packages("fda.usc", repos ="http://cran.stat.auckland.ac.nz")
library("fda.usc")
data("tecator")
install.packages("RCurl", repos ="http://cran.stat.auckland.ac.nz")
vignette(package = "fda")
vignette(package = "fda.usc")
190000 * 300
dir()
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
library(knitr);knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex");system("open FAOSTAT.pdf")
library(knitr);knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex");system("open FAOSTAT.pdf")
library(knitr);knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex");system("open FAOSTAT.pdf")
library(knitr);knit("FAOSTAT.Rnw");system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
str(FAOmetaTable)
library(FAOSTAT)
str(FAOmetaTable)
head(FAOmetaTable$itemAggTable)
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
test  = getFAO()
str(test)
range(test[, 1])
args(getFAOtoSYB)
str(FAO.lst)
library(WDI)
install.packages("WDI", repos = "http://cran.stat.auckland.ac.nz"))
install.packages("WDI", repos = "http://cran.stat.auckland.ac.nz")
library(help = WDI)
str(WDI_data)
data(WDI_data)
WDI_data
library(WDI)
str(WDI_data)
?WDI
test = WDI()
head(test)
test = WDI(country="all", indicator=c("AG.AGR.TRAC.NO","TM.TAX.TCOM.BC.ZS"), start=1990, end=2000)
head(tes)
head(test)
WDI
getWDI
head(test)
getWDItoSYB
WDI
wdi.dl
WDI:::wdi.dl
library(help = WDI)
args(getWDItoSYB)
str(WB.lst)
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
FAOcountryProfile[FAOcountryProfile$UN_CODE %in% c(156, 344, 446), ]
FAOcountryProfile[FAOcountryProfile$FAOST_CODE %in% c(41, 96, 128, 214), ]
FAOcountryProfile[FAOcountryProfile$FAOST_CODE %in% c(41, 96, 128, 214), c("FAOST_CODE", "MOTHER_M49_CODE")]
FAOcountryProfile[FAOcountryProfile$MOTHER_M49_CODE == 156, ]
FAOcountryProfile[which(FAOcountryProfile$MOTHER_M49_CODE == 156), ]
FAOcountryProfile[which(FAOcountryProfile$MOTHER_M49_CODE == 156), "ABBR_FAO_NAME"]
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
ls()
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
FAOSTAT.pdf
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
str(FAO.lst)
FAOcountryProfile[grep("Sudan", FAOcountryProfile$OFFICIAL_FAO_NAME), ]
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
head(FAO.lst$entity)
head(WB.lst$entity)
args(fillCountryCode)
demo
demoResult[which(is.na(demoResult$ISO2_WB_CODE)), ]
demoResult[which(is.na(demoResult$ISO2_WB_CODE)), "Country"]
unique(demoResult[which(is.na(demoResult$ISO2_WB_CODE)), "Country"])
length(unique(Demo$Country))
?demo
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
FAOSTAT.pdf
demoResult[is.na(demoResult$ISO2_WB_CODE), ]
unique(demoResult[is.na(demoResult$ISO2_WB_CODE), "Country"])
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
library(help = FAOSTAT)
args(CHMT)
CHMT
FAOcheck
ls()
FAOquery.df
FAOcheck(var = FAOquery.df[, 1], data = FAL.lst$entity)
FAOcheck(var = FAOquery.df[, 1], data = FAO.lst$entity)
checked = FAOcheck(var = FAOquery.df[, 1], data = FAO.lst$entity)
FAOquery.df
args(FAOcheck)
library(knitr);knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex");system("open FAOSTAT.pdf")
library(knitr);knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex");system("open FAOSTAT.pdf")
library(knitr);knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex");system("open FAOSTAT.pdf")
library(knitr);knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex");system("open FAOSTAT.pdf")
colnames(FAOcountryProfile)
library(knitr);knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex");system("open FAOSTAT.pdf")
head(WB.df)
ggplot(data = WB.df[WB.df$ISO2_WB_CODE == "AD", ], aes(x = Year, y = totalPopulation)) + geom_point()
ggplot(data = WB.df[WB.df$ISO2_WB_CODE == "AD", ], aes(x = Year, y = totalPopulation)) + geom_point(size = 1)
ggplot(data = WB.df[WB.df$ISO2_WB_CODE == "AD", ], aes(x = Year, y = totalPopulation)) + geom_point(size = 1) + geom_line()
ggplot(data = WB.df[WB.df$ISO2_WB_CODE == "AD", ], aes(x = Year, y = totalPopulation)) + geom_point(size = 1.5) + geom_line()
ggplot(data = WB.df[WB.df$ISO2_WB_CODE == "AD", ], aes(x = Year, y = totalPopulation)) + geom_point(size = 1.2) + geom_line()
ggplot(data = WB.df[WB.df$ISO2_WB_CODE == "AD", ], aes(x = Year, y = totalPopulation)) + geom_point(size = 1) + geom_line()
ggplot(data = WB.df[WB.df$ISO2_WB_CODE == "AD", ], aes(x = Year, y = totalPopulation)) + geom_point(size = 1.5) + geom_line()
ggplot(data = WB.df[WB.df$ISO2_WB_CODE == "AD", ], aes(x = Year, y = totalPopulation)) + geom_point(size = 1.2) + geom_line()
system("open FAOSTAT.Rnw")
system("open FAOSTAT.pdf")
3000 * 25
system("open FAOSTAT.Rnw")
system("open FAOSTAT.pdf")
library(knitr);knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex");system("open FAOSTAT.pdf")
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
library(FAOSTAT)
FAOcountryProfile[which(FAOcountryProfile$ISO2_WB_CODE == "SD"), ]
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
args(aggRegion)

FAOregion.df = aggRegion(data = merged.df, relationDF = relation.df,
                         aggVar = c("arableLand", "cerealExp", "cerealProd",
                                    "totalPopulation", "GDPUSD"),
                         aggMethod = rep("sum", 5),
                         unspecifiedCode = "Unspecified")


UNregion.df = aggRegion(data = merged.df, relationDF = relation.df,
                        aggVar = c("arableLand", "cerealExp", "cerealProd",
                                   "totalPopulation", "GDPUSD"),
                        aggMethod = rep("sum", 5),
                        unspecifiedCode = "Unspecified")

FAOcountryProfile[FAOcountryProfile$UN_CODE %in% c(51, 62, 164), ]
FAOcountryProfile[FAOcountryProfile$FAOST_CODE %in% c(51, 62, 164), ]
aggRegion
library(knitr); knit("FAOSTAT.Rnw"); system("pdflatex FAOSTAT.tex"); system("open FAOSTAT.pdf")
